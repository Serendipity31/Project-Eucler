#Challenge 2:Even Fibonacci numbers
'''

Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
'''

fibs = [1, 2]
backwards = fibs[::-1]
max_value = 4000000

def sequence(fore, back):
	while ( back[0] + back[1] ) < max_value:
		new_number = back[0] + back[1]
		fore.append(new_number)
		back = fore[::-1]

#	if back[0] > max_value:
#		del back[0]
#		fore = back[::-1]

def sum(numbers):
	total = 0
	for i in numbers:
		if i % 2 == 0:
			total += i
	return total

sequence(fibs, backwards)
print (sum(fibs))

	
	
